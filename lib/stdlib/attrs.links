open VirtualDom;

sig placeholder : (String) -> (String,String)
fun placeholder(val) {
    attr ("placeholder", val)
}

sig id : (String) -> (String,String)
fun id(val) {
    attr ("id", val)
}

sig type : (String) -> (String,String)
fun type(val) {
    attr ("type", val)
}

sig width : (String) -> (String,String)
fun width(val) {
    attr ("width", val)
}

sig height : (String) -> (String,String)
fun height(val) {
    attr ("height", val)
}

sig style : (String) -> (String,String)
fun style(val) {
    attr ("style", val)
}

sig class : (String) -> (String,String)
fun class (val) {
	attr ("className", val)
}

sig color : (String) -> (String,String)
fun color(val) {
    attr ("color", val)
}

sig title : (String) -> (String,String)
fun title(val) {
	attr ("title", val)
}

sig href : (String) -> (String,String)
fun href(val) {
	attr ("href", val)
}

sig dir : (String) -> (String,String)
fun dir(val) {
	attr ("dir", val)
}

sig lang : (String) -> (String,String)
fun lang(val) {
	attr ("lang", val)
}

sig face : (String) -> (String,String)
fun face(val) {
	attr ("face", val)
}

sig name : (String) -> (String,String)
fun name(val) {
    attr ("name", val)
}

sig value : (String) -> (String,String)
fun value(val) {
    attr ("value", val)
}

sig for_ : (String) -> (String,String)
fun for_(val) {
    attr ("for", val)
}

sig text : (String) -> (String,String)
fun text(val) {
    attr ("text", val)
}

sig href : (String) -> (String,String)
fun href(val) {
    attr ("href", val)
}

sig checked : (Bool) -> (String,String)
fun checked(val) {
    if (val == true) {
        attr ("checked", "true")
    } else {
        attr ("","")
    }
}

sig hidden : (Bool) -> (String,String)
fun hidden(val) {
    if (val == true) {
        attr ("hidden", "true")
    } else {
        attr ("","")
    }
}

#sig classList : ([(String,Bool)]) ~> String
fun classList(classes) {
    switch (classes) {
        case ((val,b)::xs) ->
            if (b == true) {
                val ^^ " " ^^ classList(xs)
            } else {
                classList(xs)
            }
        case [] -> ""
    }
}
