open Mvu;
open MvuHTML;
open MvuAttrs;
open MvuEvents;
open MvuSubscriptions;

typename Model = (keyPressed : String);
typename Msg = [| KeyPressed : String |];

fun keyCodeHandler() {
  getKeyUpCode(fun(keycode) {
    KeyPressed(keycode)
  })
}

sig updt : (Msg, Model) ~%e~> Model
fun updt(msg, model) {
  switch(msg) {
    case KeyPressed(keycode) ->
      (model with keyPressed = keycode)
  }
}

sig view : (Model) ~%e~> HTML(Msg)
fun view(model) {
    div (id("testdiv") +@ style ("width:100%;height:100%"),
    textNode("Key pressed: " ^^ model.keyPressed))
}

sig subscriptions : (Model) -> Sub(Msg)
fun subscriptions(model) {
  keyCodeHandler()
}

fun mainPage(_) {
  var initialModel = (keyPressed = "None");
  run("placeholder", initialModel, view,
    fun(model, msg) { (updt(model, msg), NoCommand) }, subscriptions);
  page
  <html>
    <head>
      <title>Links - Subscriptions</title>
    </head>
    <body>
      <div id="placeholder"></div>
    </body>
  </html>
}

fun main() {
  addRoute("/", mainPage);
  servePages()
}

main()
